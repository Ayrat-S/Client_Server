Conspect_Client_Server_Architecture
Group_28

Двух уровневая
Трех уровневая
Многоуровненвая

Толстый клиент
Тонкий клиент

Теплый клиент (сохранены cookies)
Холодный клиент (первая регистрация)

Клиент-серверная архитектура работает через API

***********
Что такое HTTP?
HTTP (англ. HyperText Transfer Protocol — «протокол передачи гипертекста»)
HTTP — протокол прикладного уровня передачи данных, изначально — в виде гипертекстовых документов в формате HTML, в настоящее время используется для передачи произвольных данных.
***
Клиент -> HTTP-запрос -> Сервер
Сервер -> HTTP-ответ  -> Клиент
***
Гиперте́кст — термин, обозначающий систему из текстовых страниц, имеющих перекрёстные ссылки. составленные как по вертикали, так и по горизонтали. Примерами гипертекста являются энциклопедии, компьютерные сети, веб-сайты, в которых можно переходить с одной страницы на другую и выполнять поиск по ключевым словам.
***
Остановился на 13:25

Холодильник может быть как клиентом так и сервером.
Главное условие - это чтобы в нем было компьютерное железо, в котором есть возможность установки программ и обмен данными.

19:45 HTTP client
Клиентом может быть абсолютная железяка и не обязатльно ставить специализированный софт клиента.

HTTP server - работает по http запросам.
HTTP client - это тоже какой-то софт, который спрашивает что-то по законам http (протоколу).
На примере браузера:
Вводите ссылку - браузер по http протоколу (правилу) передает запрос на сервак.
HTTP client - это "не важно что" спросившее на серваке информацию по http протоколу. Это может быть какая-то одна строчка кода запущенная в терминале спросившая что-то на серваке.

РИСУНКИ

(Client: браузер) <===> (API)<=>(Сервер: HTTP-server)


В браузере (клиенте) вводим https://name.com
Браузер отправляет запрос в интернет на DNS сервера которые пробегут по пути https:// , найдут name.com , найдут железо по ip в интернете где крутится этот сайт => это будет http запрос.

name.com - это человеко-понятное название железа сети. Под капотом железяка-сервер называться будет например 190.23.47.215 (ip железяки сервера глобальной сети интернет - адрес) 

Допустим мы вводим:
https://name.com/login
Это будет endpoint, т.е. на серваке name.com запущен такой сервер, который не просто страничку возвращает, а у него есть своя API (application programm interface), т.е. на сервере поднято API.
Это такая прослоечка которая помогает клиенту общаться с серваком.
Что значит общаться - API это набор комманд в который если постучаться можно получить ответ от сервера. 
Что значит набор комманд - например /login это команда, т.е endpoint.
Набор этих комманд это endpoint (точка касания к серверу).
Если команду ввести с ошибкой или не существующую - сервер вернет ответ в виде статус кода (ошибки) 404 Not Found.

Статус код (ошибка) 404 Not Found - это протокол HTTP, правило взаимодействия клиентов и серверов внутри сети.

Программист может создать свои статус коды, методы.

Backend - server
Frontend - client

Программисты фронтэнда и бэкенда всегда договариваются, какие эндпоинты, что должно прилетать, каким методом, и что на эти запросы должно быть отвечено сервером - чтобы все работало как часы.

В данном случае https://name.com/login есть эндпоинт /login
33:57






















































